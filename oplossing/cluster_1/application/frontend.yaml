apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: argo-app-frontend
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: conf-nginx
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      serviceAccountName: webapp-manager
      volumes:
      - name: conf-nginx
        configMap:
          name: conf-nginx
          items:
            - key: nginx.conf
              path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: conf-nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
        include /etc/nginx/mime.types;
        upstream backend {
            server backend:8080;
        }
        server {
            listen 80;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html;

            location / {
                try_files $uri $uri/ /index.html;
            }
            location /api {
              rewrite /api/(.*) /$1  break;
              proxy_pass http://backend;
            }
        }
    }
